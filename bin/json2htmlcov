#!/usr/bin/env node

// https://github.com/metaskills/mocha-phantomjs/issues/10
var jade = require('jade');
var fs = require('fs');

// Strings for code coverage classes
function coverageClass(n) {
  if (n >= 75) return 'high';
  if (n >= 50) return 'medium';
  if (n >= 25) return 'low';
  return 'terrible';
}

// Read in templates
var file = __dirname + '/templates/coverage.jade';
var str = fs.readFileSync(file, 'utf8');
var fn = jade.compile(str, { filename: file });

// Read JSON from stdin
var chunks = [];
process.stdin
    .on("data", function(chunk) { chunks.push(chunk); })
    .on("end",  convertInput)
    .setEncoding("utf8");

// Callback to do our conversion    
function convertInput() {
    var cov = JSON.parse(chunks.join(""));
    process.stdout.write(fn({
        cov: cov,
        coverageClass: coverageClass
    }));
}
